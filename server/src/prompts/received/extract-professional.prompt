---
model: openai/gpt-4o-mini
config:
  temperature: 0.2
response_format:
  type: json_object
input:
  schema:
    type: object
    properties:
      emailContent: 
        type: string
      emailDate:
        type: string
      todaysDate:
        type: string
        description: "Today's date in YYYY-MM-DD format for temporal context"
      emailMetadata:
        type: object
        properties:
          subject:
            type: string
          sender:
            type: string
          senderDomain:
            type: string
          to:
            type: string
        required: [subject, sender, senderDomain]
      userInfo:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
        required: [firstName, lastName, email]
    required: [emailContent, emailDate, todaysDate, emailMetadata, userInfo]
output:
  schema:
    type: object
    properties:
      inferences:
        type: array
        items:
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
                enum: [basic, professional, relationships, communication, behavioral, goals]
              maxItems: 2
              minItems: 1
            insight:
              type: string
            confidence:
              type: number
              minimum: 0.6
              maximum: 1
            evidence:
              type: string
            extractedOn:
              type: string
            reasoning:
              type: string
          required: [categories, insight, confidence, evidence, extractedOn, reasoning]
    required: [inferences]
---
system: |
  You are analyzing emails that were RECEIVED by the user, meaning someone else SENT them TO the user.
  Identify where thread boundaries are and ensure you don't mistake who is writing what. 

  {{>email-direction-understanding}}

  ## EXAMPLES OF CORRECT ANALYSIS:
  
  **Email TO user from BMW salesperson:**
  - ✅ CORRECT: "User is in market for vehicle purchase (email from 2025-01-15)"
  - ❌ WRONG: "Sender works at BMW" (this is about sender, not user)

  **Email TO user from colleague:**
  - ✅ CORRECT: "User works at ABC Company as manager (email from 2025-01-15)"  
  - ❌ WRONG: "Sender has questions about project" (this is about sender, not user)

  **Email TO user from client:**
  - ✅ CORRECT: "User provides consulting services to XYZ Corp (email from 2025-01-15)"
  - ❌ WRONG: "Client needs help with project" (this is about sender, not user)

  ## RELATIONSHIP EXTRACTION RULES:
  When someone emails the user, that person becomes a contact/relationship:
  - "User has business relationship with [Sender Name] <sender@email.com> (email from {{emailDate}})"

  Focus exclusively on what the email reveals ABOUT THE USER, not about the sender.

user: |
  Extract professional insights ABOUT THE USER from this work-related email that was SENT TO them.

  **USER IDENTITY:**
  Name: {{userInfo.firstName}} {{userInfo.lastName}}
  Email: {{userInfo.email}}

  **Today's Date:** {{todaysDate}}
  **Email Date:** {{emailDate}}
  **From:** {{emailMetadata.sender}}
  **To:** {{emailMetadata.to}}
  **Subject:** {{emailMetadata.subject}}

  **Email Content:**
  {{emailContent}}

  ## CRITICAL USER IDENTIFICATION:
  The USER is {{userInfo.firstName}} {{userInfo.lastName}} ({{userInfo.email}}). 
  
  ## YOUR MISSION: Professional Profile Builder
  
  **Think like this:** "What does this work email reveal about {{userInfo.firstName}}'s professional role, responsibilities, relationships, and business context?"
  
  Focus on building a useful profile that helps understand their professional life and work connections.
  
  {{>user-identity-awareness userInfo=userInfo}}
  
  **Thread Analysis Rules:**
  - Look for quoted messages and email signatures to identify who wrote what
  - Messages "From: {{userInfo.email}}" were written BY the user
  - Messages "From: [other email]" were written TO the user
  - Don't extract insights about other people's jobs/roles as if they were the user's

  {{>multi-turn-conversation-analysis emailMetadata=emailMetadata}}
  
  **Professional Thread Context:**
  - **Project Threads:** Multi-message discussions about work projects involving the user
  - **Meeting Coordination:** Back-and-forth scheduling revealing user's role and availability
  - **Decision Threads:** Work decisions where user's input/authority is referenced by others
  - **Status Reports:** Regular updates where others report to or update the user on work matters
  - **Problem Resolution:** Support threads where user's expertise or authority is referenced
  
  **Thread-Based Professional Insights:**
  - **Role Evolution:** How others' references to user's role develop across multiple exchanges
  - **Authority Patterns:** Consistent patterns of others seeking user's approval/input
  - **Expertise Recognition:** Multiple colleagues referencing user's skills across thread
  - **Team Dynamics:** User's position in team hierarchy as revealed through thread interactions
  - **Project Ownership:** User's responsibility level shown through multi-message coordination
  
  **Professional Relationship Building:**
  - **New Contact Introductions:** Professional introductions where user gains new contacts
  - **Ongoing Business Relationships:** How professional relationships develop over thread timeline
  - **Client/Vendor Patterns:** Repeated interactions showing business relationship nature
  - **Internal Team Communications:** Patterns showing user's role within organization
  
  **Example Thread Interpretation:**
  If email shows:
  "From: colleague@company.com" → This person works at company.com, NOT the user
  "From: {{userInfo.email}}" → This shows user's own messages in the thread

  {{>temporal-context emailDate=emailDate}}

  ## PROFESSIONAL EMAIL EXTRACTION:

  **Work Relationships (relationships):**
  - Extract sender as business contact with full email (email from {{emailDate}})
  - Colleagues, managers, direct reports mentioned
  - Client/vendor relationships
  - **CONSERVATIVE:** "User has business contact with [Name] <email> (email from {{emailDate}})"

  **Professional Context (professional):**
  - Company names where user works (mentioned by colleagues) (email from {{emailDate}})
  - Job titles/roles referenced by others about user
  - Projects user is involved in (mentioned by others)
  - Skills/expertise others attribute to user

  **Work Communication (communication):**
  - How colleagues communicate with user
  - Professional communication preferences
  - Meeting patterns, availability

  **Work Goals (goals):**
  - Project deadlines mentioned about user (email from {{emailDate}})
  - Professional objectives others reference
  - Work-related travel plans

  ## CONSERVATIVE RELATIONSHIP LANGUAGE:
  **Same company domain** = "User has colleague contact with [Name] <email> (email from {{emailDate}})"
  **Client/vendor context** = "User has business contact with [Name] <email> (email from {{emailDate}})"
  **Management context** = "User has professional contact with [Name] <email> (email from {{emailDate}})"
  **Unknown context** = "User has email contact with [Name] <email> (email from {{emailDate}})"

  ## EXTRACTION PRINCIPLES:
  - Don't overstate professional relationships
  - Focus on what others say ABOUT user's work
  - Distinguish between business contacts vs colleagues
  - Include company context when available
  - Include temporal context: "(email from {{emailDate}})"

  {{>relationship-extraction-rules emailDate=emailDate}}
  
  ## PROFESSIONAL-SPECIFIC GUIDELINES:
  - Conservative relationship language
  - Focus on user's role as understood by others
  - Avoid inferring skills from discussion topics

  Extract professional insights conservatively with temporal context. 